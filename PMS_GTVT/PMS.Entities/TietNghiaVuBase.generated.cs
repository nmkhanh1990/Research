
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file TietNghiaVu.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;
using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'TietNghiaVu' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class TietNghiaVuBase : EntityBase, ITietNghiaVu, IEntityId<TietNghiaVuKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private TietNghiaVuEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private TietNghiaVuEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private TietNghiaVuEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<TietNghiaVu> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event TietNghiaVuEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event TietNghiaVuEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="TietNghiaVuBase"/> instance.
		///</summary>
		public TietNghiaVuBase()
		{
			this.entityData = new TietNghiaVuEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="TietNghiaVuBase"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_soTietNghiaVu"></param>
		///<param name="_ghiChu"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_tietNghiaVuCongTacKhac"></param>
		///<param name="_chot"></param>
		///<param name="_tietNghiaVuGiangDay"></param>
		///<param name="_tietNghiaVuNckh"></param>
		///<param name="_gioChuanGiangDayChuyenSangNckh"></param>
		///<param name="_dinhMucGiangDay"></param>
		///<param name="_dinhMucNckh"></param>
		///<param name="_dinhMucKhac"></param>
		///<param name="_dinhMucThucTeGiangDay"></param>
		///<param name="_dinhMucThucTeNckh"></param>
		///<param name="_dinhMucThucTeKhac"></param>
		///<param name="_tietNghiaVuHk01"></param>
		///<param name="_tietNghiaVuHk02"></param>
		public TietNghiaVuBase(System.Int32? _maGiangVien, System.String _namHoc, System.String _hocKy, 
			System.Int32? _maHocHam, System.Int32? _maHocVi, System.Decimal? _soTietNghiaVu, System.Boolean? _ghiChu, 
			System.String _ngayCapNhat, System.String _nguoiCapNhat, System.Decimal? _tietNghiaVuCongTacKhac, 
			System.Boolean? _chot, System.Decimal? _tietNghiaVuGiangDay, System.Decimal? _tietNghiaVuNckh, 
			System.Decimal? _gioChuanGiangDayChuyenSangNckh, System.Decimal? _dinhMucGiangDay, System.Decimal? _dinhMucNckh, 
			System.Decimal? _dinhMucKhac, System.Decimal? _dinhMucThucTeGiangDay, System.Decimal? _dinhMucThucTeNckh, 
			System.Decimal? _dinhMucThucTeKhac, System.Decimal? _tietNghiaVuHk01, System.Decimal? _tietNghiaVuHk02)
		{
			this.entityData = new TietNghiaVuEntityData();
			this.backupData = null;

			this.MaGiangVien = _maGiangVien;
			this.NamHoc = _namHoc;
			this.HocKy = _hocKy;
			this.MaHocHam = _maHocHam;
			this.MaHocVi = _maHocVi;
			this.SoTietNghiaVu = _soTietNghiaVu;
			this.GhiChu = _ghiChu;
			this.NgayCapNhat = _ngayCapNhat;
			this.NguoiCapNhat = _nguoiCapNhat;
			this.TietNghiaVuCongTacKhac = _tietNghiaVuCongTacKhac;
			this.Chot = _chot;
			this.TietNghiaVuGiangDay = _tietNghiaVuGiangDay;
			this.TietNghiaVuNckh = _tietNghiaVuNckh;
			this.GioChuanGiangDayChuyenSangNckh = _gioChuanGiangDayChuyenSangNckh;
			this.DinhMucGiangDay = _dinhMucGiangDay;
			this.DinhMucNckh = _dinhMucNckh;
			this.DinhMucKhac = _dinhMucKhac;
			this.DinhMucThucTeGiangDay = _dinhMucThucTeGiangDay;
			this.DinhMucThucTeNckh = _dinhMucThucTeNckh;
			this.DinhMucThucTeKhac = _dinhMucThucTeKhac;
			this.TietNghiaVuHk01 = _tietNghiaVuHk01;
			this.TietNghiaVuHk02 = _tietNghiaVuHk02;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="TietNghiaVu"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_soTietNghiaVu"></param>
		///<param name="_ghiChu"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_tietNghiaVuCongTacKhac"></param>
		///<param name="_chot"></param>
		///<param name="_tietNghiaVuGiangDay"></param>
		///<param name="_tietNghiaVuNckh"></param>
		///<param name="_gioChuanGiangDayChuyenSangNckh"></param>
		///<param name="_dinhMucGiangDay"></param>
		///<param name="_dinhMucNckh"></param>
		///<param name="_dinhMucKhac"></param>
		///<param name="_dinhMucThucTeGiangDay"></param>
		///<param name="_dinhMucThucTeNckh"></param>
		///<param name="_dinhMucThucTeKhac"></param>
		///<param name="_tietNghiaVuHk01"></param>
		///<param name="_tietNghiaVuHk02"></param>
		public static TietNghiaVu CreateTietNghiaVu(System.Int32? _maGiangVien, System.String _namHoc, System.String _hocKy, 
			System.Int32? _maHocHam, System.Int32? _maHocVi, System.Decimal? _soTietNghiaVu, System.Boolean? _ghiChu, 
			System.String _ngayCapNhat, System.String _nguoiCapNhat, System.Decimal? _tietNghiaVuCongTacKhac, 
			System.Boolean? _chot, System.Decimal? _tietNghiaVuGiangDay, System.Decimal? _tietNghiaVuNckh, 
			System.Decimal? _gioChuanGiangDayChuyenSangNckh, System.Decimal? _dinhMucGiangDay, System.Decimal? _dinhMucNckh, 
			System.Decimal? _dinhMucKhac, System.Decimal? _dinhMucThucTeGiangDay, System.Decimal? _dinhMucThucTeNckh, 
			System.Decimal? _dinhMucThucTeKhac, System.Decimal? _tietNghiaVuHk01, System.Decimal? _tietNghiaVuHk02)
		{
			TietNghiaVu newTietNghiaVu = new TietNghiaVu();
			newTietNghiaVu.MaGiangVien = _maGiangVien;
			newTietNghiaVu.NamHoc = _namHoc;
			newTietNghiaVu.HocKy = _hocKy;
			newTietNghiaVu.MaHocHam = _maHocHam;
			newTietNghiaVu.MaHocVi = _maHocVi;
			newTietNghiaVu.SoTietNghiaVu = _soTietNghiaVu;
			newTietNghiaVu.GhiChu = _ghiChu;
			newTietNghiaVu.NgayCapNhat = _ngayCapNhat;
			newTietNghiaVu.NguoiCapNhat = _nguoiCapNhat;
			newTietNghiaVu.TietNghiaVuCongTacKhac = _tietNghiaVuCongTacKhac;
			newTietNghiaVu.Chot = _chot;
			newTietNghiaVu.TietNghiaVuGiangDay = _tietNghiaVuGiangDay;
			newTietNghiaVu.TietNghiaVuNckh = _tietNghiaVuNckh;
			newTietNghiaVu.GioChuanGiangDayChuyenSangNckh = _gioChuanGiangDayChuyenSangNckh;
			newTietNghiaVu.DinhMucGiangDay = _dinhMucGiangDay;
			newTietNghiaVu.DinhMucNckh = _dinhMucNckh;
			newTietNghiaVu.DinhMucKhac = _dinhMucKhac;
			newTietNghiaVu.DinhMucThucTeGiangDay = _dinhMucThucTeGiangDay;
			newTietNghiaVu.DinhMucThucTeNckh = _dinhMucThucTeNckh;
			newTietNghiaVu.DinhMucThucTeKhac = _dinhMucThucTeKhac;
			newTietNghiaVu.TietNghiaVuHk01 = _tietNghiaVuHk01;
			newTietNghiaVu.TietNghiaVuHk02 = _tietNghiaVuHk02;
			return newTietNghiaVu;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		[Required(ErrorMessage = "Id is required")]




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(TietNghiaVuColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaGiangVien
		{
			get
			{
				return this.entityData.MaGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaGiangVien == value)
					return;
				
                OnPropertyChanging("MaGiangVien");                    
				OnColumnChanging(TietNghiaVuColumn.MaGiangVien, this.entityData.MaGiangVien);
				this.entityData.MaGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.MaGiangVien, this.entityData.MaGiangVien);
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NamHoc
		{
			get
			{
				return this.entityData.NamHoc; 
			}
			
			set
			{
				if (this.entityData.NamHoc == value)
					return;
				
                OnPropertyChanging("NamHoc");                    
				OnColumnChanging(TietNghiaVuColumn.NamHoc, this.entityData.NamHoc);
				this.entityData.NamHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.NamHoc, this.entityData.NamHoc);
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String HocKy
		{
			get
			{
				return this.entityData.HocKy; 
			}
			
			set
			{
				if (this.entityData.HocKy == value)
					return;
				
                OnPropertyChanging("HocKy");                    
				OnColumnChanging(TietNghiaVuColumn.HocKy, this.entityData.HocKy);
				this.entityData.HocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.HocKy, this.entityData.HocKy);
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this.entityData.MaHocHam; 
			}
			
			set
			{
				if (this.entityData.MaHocHam == value)
					return;
				
                OnPropertyChanging("MaHocHam");                    
				OnColumnChanging(TietNghiaVuColumn.MaHocHam, this.entityData.MaHocHam);
				this.entityData.MaHocHam = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.MaHocHam, this.entityData.MaHocHam);
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this.entityData.MaHocVi; 
			}
			
			set
			{
				if (this.entityData.MaHocVi == value)
					return;
				
                OnPropertyChanging("MaHocVi");                    
				OnColumnChanging(TietNghiaVuColumn.MaHocVi, this.entityData.MaHocVi);
				this.entityData.MaHocVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.MaHocVi, this.entityData.MaHocVi);
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTietNghiaVu property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTietNghiaVu
		{
			get
			{
				return this.entityData.SoTietNghiaVu; 
			}
			
			set
			{
				if (this.entityData.SoTietNghiaVu == value)
					return;
				
                OnPropertyChanging("SoTietNghiaVu");                    
				OnColumnChanging(TietNghiaVuColumn.SoTietNghiaVu, this.entityData.SoTietNghiaVu);
				this.entityData.SoTietNghiaVu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.SoTietNghiaVu, this.entityData.SoTietNghiaVu);
				OnPropertyChanged("SoTietNghiaVu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? GhiChu
		{
			get
			{
				return this.entityData.GhiChu; 
			}
			
			set
			{
				if (this.entityData.GhiChu == value)
					return;
				
                OnPropertyChanging("GhiChu");                    
				OnColumnChanging(TietNghiaVuColumn.GhiChu, this.entityData.GhiChu);
				this.entityData.GhiChu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.GhiChu, this.entityData.GhiChu);
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String NgayCapNhat
		{
			get
			{
				return this.entityData.NgayCapNhat; 
			}
			
			set
			{
				if (this.entityData.NgayCapNhat == value)
					return;
				
                OnPropertyChanging("NgayCapNhat");                    
				OnColumnChanging(TietNghiaVuColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				this.entityData.NgayCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this.entityData.NguoiCapNhat; 
			}
			
			set
			{
				if (this.entityData.NguoiCapNhat == value)
					return;
				
                OnPropertyChanging("NguoiCapNhat");                    
				OnColumnChanging(TietNghiaVuColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				this.entityData.NguoiCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietNghiaVuCongTacKhac property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietNghiaVuCongTacKhac
		{
			get
			{
				return this.entityData.TietNghiaVuCongTacKhac; 
			}
			
			set
			{
				if (this.entityData.TietNghiaVuCongTacKhac == value)
					return;
				
                OnPropertyChanging("TietNghiaVuCongTacKhac");                    
				OnColumnChanging(TietNghiaVuColumn.TietNghiaVuCongTacKhac, this.entityData.TietNghiaVuCongTacKhac);
				this.entityData.TietNghiaVuCongTacKhac = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.TietNghiaVuCongTacKhac, this.entityData.TietNghiaVuCongTacKhac);
				OnPropertyChanged("TietNghiaVuCongTacKhac");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Chot property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? Chot
		{
			get
			{
				return this.entityData.Chot; 
			}
			
			set
			{
				if (this.entityData.Chot == value)
					return;
				
                OnPropertyChanging("Chot");                    
				OnColumnChanging(TietNghiaVuColumn.Chot, this.entityData.Chot);
				this.entityData.Chot = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.Chot, this.entityData.Chot);
				OnPropertyChanged("Chot");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietNghiaVuGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietNghiaVuGiangDay
		{
			get
			{
				return this.entityData.TietNghiaVuGiangDay; 
			}
			
			set
			{
				if (this.entityData.TietNghiaVuGiangDay == value)
					return;
				
                OnPropertyChanging("TietNghiaVuGiangDay");                    
				OnColumnChanging(TietNghiaVuColumn.TietNghiaVuGiangDay, this.entityData.TietNghiaVuGiangDay);
				this.entityData.TietNghiaVuGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.TietNghiaVuGiangDay, this.entityData.TietNghiaVuGiangDay);
				OnPropertyChanged("TietNghiaVuGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietNghiaVuNckh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietNghiaVuNckh
		{
			get
			{
				return this.entityData.TietNghiaVuNckh; 
			}
			
			set
			{
				if (this.entityData.TietNghiaVuNckh == value)
					return;
				
                OnPropertyChanging("TietNghiaVuNckh");                    
				OnColumnChanging(TietNghiaVuColumn.TietNghiaVuNckh, this.entityData.TietNghiaVuNckh);
				this.entityData.TietNghiaVuNckh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.TietNghiaVuNckh, this.entityData.TietNghiaVuNckh);
				OnPropertyChanged("TietNghiaVuNckh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GioChuanGiangDayChuyenSangNckh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GioChuanGiangDayChuyenSangNckh
		{
			get
			{
				return this.entityData.GioChuanGiangDayChuyenSangNckh; 
			}
			
			set
			{
				if (this.entityData.GioChuanGiangDayChuyenSangNckh == value)
					return;
				
                OnPropertyChanging("GioChuanGiangDayChuyenSangNckh");                    
				OnColumnChanging(TietNghiaVuColumn.GioChuanGiangDayChuyenSangNckh, this.entityData.GioChuanGiangDayChuyenSangNckh);
				this.entityData.GioChuanGiangDayChuyenSangNckh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.GioChuanGiangDayChuyenSangNckh, this.entityData.GioChuanGiangDayChuyenSangNckh);
				OnPropertyChanged("GioChuanGiangDayChuyenSangNckh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DinhMucGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DinhMucGiangDay
		{
			get
			{
				return this.entityData.DinhMucGiangDay; 
			}
			
			set
			{
				if (this.entityData.DinhMucGiangDay == value)
					return;
				
                OnPropertyChanging("DinhMucGiangDay");                    
				OnColumnChanging(TietNghiaVuColumn.DinhMucGiangDay, this.entityData.DinhMucGiangDay);
				this.entityData.DinhMucGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.DinhMucGiangDay, this.entityData.DinhMucGiangDay);
				OnPropertyChanged("DinhMucGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DinhMucNckh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DinhMucNckh
		{
			get
			{
				return this.entityData.DinhMucNckh; 
			}
			
			set
			{
				if (this.entityData.DinhMucNckh == value)
					return;
				
                OnPropertyChanging("DinhMucNckh");                    
				OnColumnChanging(TietNghiaVuColumn.DinhMucNckh, this.entityData.DinhMucNckh);
				this.entityData.DinhMucNckh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.DinhMucNckh, this.entityData.DinhMucNckh);
				OnPropertyChanged("DinhMucNckh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DinhMucKhac property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DinhMucKhac
		{
			get
			{
				return this.entityData.DinhMucKhac; 
			}
			
			set
			{
				if (this.entityData.DinhMucKhac == value)
					return;
				
                OnPropertyChanging("DinhMucKhac");                    
				OnColumnChanging(TietNghiaVuColumn.DinhMucKhac, this.entityData.DinhMucKhac);
				this.entityData.DinhMucKhac = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.DinhMucKhac, this.entityData.DinhMucKhac);
				OnPropertyChanged("DinhMucKhac");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DinhMucThucTeGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DinhMucThucTeGiangDay
		{
			get
			{
				return this.entityData.DinhMucThucTeGiangDay; 
			}
			
			set
			{
				if (this.entityData.DinhMucThucTeGiangDay == value)
					return;
				
                OnPropertyChanging("DinhMucThucTeGiangDay");                    
				OnColumnChanging(TietNghiaVuColumn.DinhMucThucTeGiangDay, this.entityData.DinhMucThucTeGiangDay);
				this.entityData.DinhMucThucTeGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.DinhMucThucTeGiangDay, this.entityData.DinhMucThucTeGiangDay);
				OnPropertyChanged("DinhMucThucTeGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DinhMucThucTeNckh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DinhMucThucTeNckh
		{
			get
			{
				return this.entityData.DinhMucThucTeNckh; 
			}
			
			set
			{
				if (this.entityData.DinhMucThucTeNckh == value)
					return;
				
                OnPropertyChanging("DinhMucThucTeNckh");                    
				OnColumnChanging(TietNghiaVuColumn.DinhMucThucTeNckh, this.entityData.DinhMucThucTeNckh);
				this.entityData.DinhMucThucTeNckh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.DinhMucThucTeNckh, this.entityData.DinhMucThucTeNckh);
				OnPropertyChanged("DinhMucThucTeNckh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DinhMucThucTeKhac property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DinhMucThucTeKhac
		{
			get
			{
				return this.entityData.DinhMucThucTeKhac; 
			}
			
			set
			{
				if (this.entityData.DinhMucThucTeKhac == value)
					return;
				
                OnPropertyChanging("DinhMucThucTeKhac");                    
				OnColumnChanging(TietNghiaVuColumn.DinhMucThucTeKhac, this.entityData.DinhMucThucTeKhac);
				this.entityData.DinhMucThucTeKhac = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.DinhMucThucTeKhac, this.entityData.DinhMucThucTeKhac);
				OnPropertyChanged("DinhMucThucTeKhac");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietNghiaVuHk01 property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietNghiaVuHk01
		{
			get
			{
				return this.entityData.TietNghiaVuHk01; 
			}
			
			set
			{
				if (this.entityData.TietNghiaVuHk01 == value)
					return;
				
                OnPropertyChanging("TietNghiaVuHk01");                    
				OnColumnChanging(TietNghiaVuColumn.TietNghiaVuHk01, this.entityData.TietNghiaVuHk01);
				this.entityData.TietNghiaVuHk01 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.TietNghiaVuHk01, this.entityData.TietNghiaVuHk01);
				OnPropertyChanged("TietNghiaVuHk01");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietNghiaVuHk02 property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietNghiaVuHk02
		{
			get
			{
				return this.entityData.TietNghiaVuHk02; 
			}
			
			set
			{
				if (this.entityData.TietNghiaVuHk02 == value)
					return;
				
                OnPropertyChanging("TietNghiaVuHk02");                    
				OnColumnChanging(TietNghiaVuColumn.TietNghiaVuHk02, this.entityData.TietNghiaVuHk02);
				this.entityData.TietNghiaVuHk02 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TietNghiaVuColumn.TietNghiaVuHk02, this.entityData.TietNghiaVuHk02);
				OnPropertyChanged("TietNghiaVuHk02");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="GiangVien"/>.
		/// </summary>
		/// <value>The source GiangVien for MaGiangVien.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GiangVien MaGiangVienSource
      	{
            get { return entityData.MaGiangVienSource; }
            set { entityData.MaGiangVienSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamHoc", "Nam Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HocKy", "Hoc Ky", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayCapNhat", "Ngay Cap Nhat", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiCapNhat", "Nguoi Cap Nhat", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "TietNghiaVu"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "MaGiangVien", "NamHoc", "HocKy", "MaHocHam", "MaHocVi", "SoTietNghiaVu", "GhiChu", "NgayCapNhat", "NguoiCapNhat", "TietNghiaVuCongTacKhac", "Chot", "TietNghiaVuGiangDay", "TietNghiaVuNckh", "GioChuanGiangDayChuyenSangNckh", "DinhMucGiangDay", "DinhMucNckh", "DinhMucKhac", "DinhMucThucTeGiangDay", "DinhMucThucTeNckh", "DinhMucThucTeKhac", "TietNghiaVuHk01", "TietNghiaVuHk02"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as TietNghiaVuEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (TietNghiaVu) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<TietNghiaVu>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as TietNghiaVu);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed TietNghiaVu Entity 
		///</summary>
		protected virtual TietNghiaVu Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			TietNghiaVu copy = new TietNghiaVu();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.MaGiangVien = this.MaGiangVien;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaHocHam = this.MaHocHam;
				copy.MaHocVi = this.MaHocVi;
				copy.SoTietNghiaVu = this.SoTietNghiaVu;
				copy.GhiChu = this.GhiChu;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.TietNghiaVuCongTacKhac = this.TietNghiaVuCongTacKhac;
				copy.Chot = this.Chot;
				copy.TietNghiaVuGiangDay = this.TietNghiaVuGiangDay;
				copy.TietNghiaVuNckh = this.TietNghiaVuNckh;
				copy.GioChuanGiangDayChuyenSangNckh = this.GioChuanGiangDayChuyenSangNckh;
				copy.DinhMucGiangDay = this.DinhMucGiangDay;
				copy.DinhMucNckh = this.DinhMucNckh;
				copy.DinhMucKhac = this.DinhMucKhac;
				copy.DinhMucThucTeGiangDay = this.DinhMucThucTeGiangDay;
				copy.DinhMucThucTeNckh = this.DinhMucThucTeNckh;
				copy.DinhMucThucTeKhac = this.DinhMucThucTeKhac;
				copy.TietNghiaVuHk01 = this.TietNghiaVuHk01;
				copy.TietNghiaVuHk02 = this.TietNghiaVuHk02;
			
			if (this.MaGiangVienSource != null && existingCopies.Contains(this.MaGiangVienSource))
				copy.MaGiangVienSource = existingCopies[this.MaGiangVienSource] as GiangVien;
			else
				copy.MaGiangVienSource = MakeCopyOf(this.MaGiangVienSource, existingCopies) as GiangVien;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed TietNghiaVu Entity 
		///</summary>
		public virtual TietNghiaVu Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed TietNghiaVu Entity which is a deep copy of the current entity.
		///</summary>
		public virtual TietNghiaVu DeepCopy()
		{
			return EntityHelper.Clone<TietNghiaVu>(this as TietNghiaVu);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as TietNghiaVuEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new TietNghiaVuEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as TietNghiaVuEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(TietNghiaVuColumn column)
		{
			switch(column)
			{
					case TietNghiaVuColumn.Id:
					return entityData.Id != _originalData.Id;
					case TietNghiaVuColumn.MaGiangVien:
					return entityData.MaGiangVien != _originalData.MaGiangVien;
					case TietNghiaVuColumn.NamHoc:
					return entityData.NamHoc != _originalData.NamHoc;
					case TietNghiaVuColumn.HocKy:
					return entityData.HocKy != _originalData.HocKy;
					case TietNghiaVuColumn.MaHocHam:
					return entityData.MaHocHam != _originalData.MaHocHam;
					case TietNghiaVuColumn.MaHocVi:
					return entityData.MaHocVi != _originalData.MaHocVi;
					case TietNghiaVuColumn.SoTietNghiaVu:
					return entityData.SoTietNghiaVu != _originalData.SoTietNghiaVu;
					case TietNghiaVuColumn.GhiChu:
					return entityData.GhiChu != _originalData.GhiChu;
					case TietNghiaVuColumn.NgayCapNhat:
					return entityData.NgayCapNhat != _originalData.NgayCapNhat;
					case TietNghiaVuColumn.NguoiCapNhat:
					return entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
					case TietNghiaVuColumn.TietNghiaVuCongTacKhac:
					return entityData.TietNghiaVuCongTacKhac != _originalData.TietNghiaVuCongTacKhac;
					case TietNghiaVuColumn.Chot:
					return entityData.Chot != _originalData.Chot;
					case TietNghiaVuColumn.TietNghiaVuGiangDay:
					return entityData.TietNghiaVuGiangDay != _originalData.TietNghiaVuGiangDay;
					case TietNghiaVuColumn.TietNghiaVuNckh:
					return entityData.TietNghiaVuNckh != _originalData.TietNghiaVuNckh;
					case TietNghiaVuColumn.GioChuanGiangDayChuyenSangNckh:
					return entityData.GioChuanGiangDayChuyenSangNckh != _originalData.GioChuanGiangDayChuyenSangNckh;
					case TietNghiaVuColumn.DinhMucGiangDay:
					return entityData.DinhMucGiangDay != _originalData.DinhMucGiangDay;
					case TietNghiaVuColumn.DinhMucNckh:
					return entityData.DinhMucNckh != _originalData.DinhMucNckh;
					case TietNghiaVuColumn.DinhMucKhac:
					return entityData.DinhMucKhac != _originalData.DinhMucKhac;
					case TietNghiaVuColumn.DinhMucThucTeGiangDay:
					return entityData.DinhMucThucTeGiangDay != _originalData.DinhMucThucTeGiangDay;
					case TietNghiaVuColumn.DinhMucThucTeNckh:
					return entityData.DinhMucThucTeNckh != _originalData.DinhMucThucTeNckh;
					case TietNghiaVuColumn.DinhMucThucTeKhac:
					return entityData.DinhMucThucTeKhac != _originalData.DinhMucThucTeKhac;
					case TietNghiaVuColumn.TietNghiaVuHk01:
					return entityData.TietNghiaVuHk01 != _originalData.TietNghiaVuHk01;
					case TietNghiaVuColumn.TietNghiaVuHk02:
					return entityData.TietNghiaVuHk02 != _originalData.TietNghiaVuHk02;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< TietNghiaVuColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.MaGiangVien != _originalData.MaGiangVien;
			result = result || entityData.NamHoc != _originalData.NamHoc;
			result = result || entityData.HocKy != _originalData.HocKy;
			result = result || entityData.MaHocHam != _originalData.MaHocHam;
			result = result || entityData.MaHocVi != _originalData.MaHocVi;
			result = result || entityData.SoTietNghiaVu != _originalData.SoTietNghiaVu;
			result = result || entityData.GhiChu != _originalData.GhiChu;
			result = result || entityData.NgayCapNhat != _originalData.NgayCapNhat;
			result = result || entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
			result = result || entityData.TietNghiaVuCongTacKhac != _originalData.TietNghiaVuCongTacKhac;
			result = result || entityData.Chot != _originalData.Chot;
			result = result || entityData.TietNghiaVuGiangDay != _originalData.TietNghiaVuGiangDay;
			result = result || entityData.TietNghiaVuNckh != _originalData.TietNghiaVuNckh;
			result = result || entityData.GioChuanGiangDayChuyenSangNckh != _originalData.GioChuanGiangDayChuyenSangNckh;
			result = result || entityData.DinhMucGiangDay != _originalData.DinhMucGiangDay;
			result = result || entityData.DinhMucNckh != _originalData.DinhMucNckh;
			result = result || entityData.DinhMucKhac != _originalData.DinhMucKhac;
			result = result || entityData.DinhMucThucTeGiangDay != _originalData.DinhMucThucTeGiangDay;
			result = result || entityData.DinhMucThucTeNckh != _originalData.DinhMucThucTeNckh;
			result = result || entityData.DinhMucThucTeKhac != _originalData.DinhMucThucTeKhac;
			result = result || entityData.TietNghiaVuHk01 != _originalData.TietNghiaVuHk01;
			result = result || entityData.TietNghiaVuHk02 != _originalData.TietNghiaVuHk02;
			return result;
		}	
		
		///<summary>
		///  Returns a TietNghiaVu Entity with the original data.
		///</summary>
		public TietNghiaVu GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateTietNghiaVu(
				_originalData.MaGiangVien,
				_originalData.NamHoc,
				_originalData.HocKy,
				_originalData.MaHocHam,
				_originalData.MaHocVi,
				_originalData.SoTietNghiaVu,
				_originalData.GhiChu,
				_originalData.NgayCapNhat,
				_originalData.NguoiCapNhat,
				_originalData.TietNghiaVuCongTacKhac,
				_originalData.Chot,
				_originalData.TietNghiaVuGiangDay,
				_originalData.TietNghiaVuNckh,
				_originalData.GioChuanGiangDayChuyenSangNckh,
				_originalData.DinhMucGiangDay,
				_originalData.DinhMucNckh,
				_originalData.DinhMucKhac,
				_originalData.DinhMucThucTeGiangDay,
				_originalData.DinhMucThucTeNckh,
				_originalData.DinhMucThucTeKhac,
				_originalData.TietNghiaVuHk01,
				_originalData.TietNghiaVuHk02
				);
				
			return (TietNghiaVu)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="TietNghiaVuBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is TietNghiaVuBase)
				return ValueEquals(this, (TietNghiaVuBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="TietNghiaVuBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString()).GetHashCode() ^ 
					((this.NamHoc == null) ? string.Empty : this.NamHoc.ToString()).GetHashCode() ^ 
					((this.HocKy == null) ? string.Empty : this.HocKy.ToString()).GetHashCode() ^ 
					((this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString()).GetHashCode() ^ 
					((this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString()).GetHashCode() ^ 
					((this.SoTietNghiaVu == null) ? string.Empty : this.SoTietNghiaVu.ToString()).GetHashCode() ^ 
					((this.GhiChu == null) ? string.Empty : this.GhiChu.ToString()).GetHashCode() ^ 
					((this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString()).GetHashCode() ^ 
					((this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString()).GetHashCode() ^ 
					((this.TietNghiaVuCongTacKhac == null) ? string.Empty : this.TietNghiaVuCongTacKhac.ToString()).GetHashCode() ^ 
					((this.Chot == null) ? string.Empty : this.Chot.ToString()).GetHashCode() ^ 
					((this.TietNghiaVuGiangDay == null) ? string.Empty : this.TietNghiaVuGiangDay.ToString()).GetHashCode() ^ 
					((this.TietNghiaVuNckh == null) ? string.Empty : this.TietNghiaVuNckh.ToString()).GetHashCode() ^ 
					((this.GioChuanGiangDayChuyenSangNckh == null) ? string.Empty : this.GioChuanGiangDayChuyenSangNckh.ToString()).GetHashCode() ^ 
					((this.DinhMucGiangDay == null) ? string.Empty : this.DinhMucGiangDay.ToString()).GetHashCode() ^ 
					((this.DinhMucNckh == null) ? string.Empty : this.DinhMucNckh.ToString()).GetHashCode() ^ 
					((this.DinhMucKhac == null) ? string.Empty : this.DinhMucKhac.ToString()).GetHashCode() ^ 
					((this.DinhMucThucTeGiangDay == null) ? string.Empty : this.DinhMucThucTeGiangDay.ToString()).GetHashCode() ^ 
					((this.DinhMucThucTeNckh == null) ? string.Empty : this.DinhMucThucTeNckh.ToString()).GetHashCode() ^ 
					((this.DinhMucThucTeKhac == null) ? string.Empty : this.DinhMucThucTeKhac.ToString()).GetHashCode() ^ 
					((this.TietNghiaVuHk01 == null) ? string.Empty : this.TietNghiaVuHk01.ToString()).GetHashCode() ^ 
					((this.TietNghiaVuHk02 == null) ? string.Empty : this.TietNghiaVuHk02.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="TietNghiaVuBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(TietNghiaVuBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="TietNghiaVuBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="TietNghiaVuBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="TietNghiaVuBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(TietNghiaVuBase Object1, TietNghiaVuBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.MaGiangVien != null && Object2.MaGiangVien != null )
			{
				if (Object1.MaGiangVien != Object2.MaGiangVien)
					equal = false;
			}
			else if (Object1.MaGiangVien == null ^ Object2.MaGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object2.NamHoc == null )
			{
				equal = false;
			}
			if ( Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object2.HocKy == null )
			{
				equal = false;
			}
			if ( Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object2.MaHocHam == null )
			{
				equal = false;
			}
			if ( Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object2.MaHocVi == null )
			{
				equal = false;
			}
			if ( Object1.SoTietNghiaVu != null && Object2.SoTietNghiaVu != null )
			{
				if (Object1.SoTietNghiaVu != Object2.SoTietNghiaVu)
					equal = false;
			}
			else if (Object1.SoTietNghiaVu == null ^ Object2.SoTietNghiaVu == null )
			{
				equal = false;
			}
			if ( Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object2.GhiChu == null )
			{
				equal = false;
			}
			if ( Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object2.NgayCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object2.NguoiCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.TietNghiaVuCongTacKhac != null && Object2.TietNghiaVuCongTacKhac != null )
			{
				if (Object1.TietNghiaVuCongTacKhac != Object2.TietNghiaVuCongTacKhac)
					equal = false;
			}
			else if (Object1.TietNghiaVuCongTacKhac == null ^ Object2.TietNghiaVuCongTacKhac == null )
			{
				equal = false;
			}
			if ( Object1.Chot != null && Object2.Chot != null )
			{
				if (Object1.Chot != Object2.Chot)
					equal = false;
			}
			else if (Object1.Chot == null ^ Object2.Chot == null )
			{
				equal = false;
			}
			if ( Object1.TietNghiaVuGiangDay != null && Object2.TietNghiaVuGiangDay != null )
			{
				if (Object1.TietNghiaVuGiangDay != Object2.TietNghiaVuGiangDay)
					equal = false;
			}
			else if (Object1.TietNghiaVuGiangDay == null ^ Object2.TietNghiaVuGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.TietNghiaVuNckh != null && Object2.TietNghiaVuNckh != null )
			{
				if (Object1.TietNghiaVuNckh != Object2.TietNghiaVuNckh)
					equal = false;
			}
			else if (Object1.TietNghiaVuNckh == null ^ Object2.TietNghiaVuNckh == null )
			{
				equal = false;
			}
			if ( Object1.GioChuanGiangDayChuyenSangNckh != null && Object2.GioChuanGiangDayChuyenSangNckh != null )
			{
				if (Object1.GioChuanGiangDayChuyenSangNckh != Object2.GioChuanGiangDayChuyenSangNckh)
					equal = false;
			}
			else if (Object1.GioChuanGiangDayChuyenSangNckh == null ^ Object2.GioChuanGiangDayChuyenSangNckh == null )
			{
				equal = false;
			}
			if ( Object1.DinhMucGiangDay != null && Object2.DinhMucGiangDay != null )
			{
				if (Object1.DinhMucGiangDay != Object2.DinhMucGiangDay)
					equal = false;
			}
			else if (Object1.DinhMucGiangDay == null ^ Object2.DinhMucGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.DinhMucNckh != null && Object2.DinhMucNckh != null )
			{
				if (Object1.DinhMucNckh != Object2.DinhMucNckh)
					equal = false;
			}
			else if (Object1.DinhMucNckh == null ^ Object2.DinhMucNckh == null )
			{
				equal = false;
			}
			if ( Object1.DinhMucKhac != null && Object2.DinhMucKhac != null )
			{
				if (Object1.DinhMucKhac != Object2.DinhMucKhac)
					equal = false;
			}
			else if (Object1.DinhMucKhac == null ^ Object2.DinhMucKhac == null )
			{
				equal = false;
			}
			if ( Object1.DinhMucThucTeGiangDay != null && Object2.DinhMucThucTeGiangDay != null )
			{
				if (Object1.DinhMucThucTeGiangDay != Object2.DinhMucThucTeGiangDay)
					equal = false;
			}
			else if (Object1.DinhMucThucTeGiangDay == null ^ Object2.DinhMucThucTeGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.DinhMucThucTeNckh != null && Object2.DinhMucThucTeNckh != null )
			{
				if (Object1.DinhMucThucTeNckh != Object2.DinhMucThucTeNckh)
					equal = false;
			}
			else if (Object1.DinhMucThucTeNckh == null ^ Object2.DinhMucThucTeNckh == null )
			{
				equal = false;
			}
			if ( Object1.DinhMucThucTeKhac != null && Object2.DinhMucThucTeKhac != null )
			{
				if (Object1.DinhMucThucTeKhac != Object2.DinhMucThucTeKhac)
					equal = false;
			}
			else if (Object1.DinhMucThucTeKhac == null ^ Object2.DinhMucThucTeKhac == null )
			{
				equal = false;
			}
			if ( Object1.TietNghiaVuHk01 != null && Object2.TietNghiaVuHk01 != null )
			{
				if (Object1.TietNghiaVuHk01 != Object2.TietNghiaVuHk01)
					equal = false;
			}
			else if (Object1.TietNghiaVuHk01 == null ^ Object2.TietNghiaVuHk01 == null )
			{
				equal = false;
			}
			if ( Object1.TietNghiaVuHk02 != null && Object2.TietNghiaVuHk02 != null )
			{
				if (Object1.TietNghiaVuHk02 != Object2.TietNghiaVuHk02)
					equal = false;
			}
			else if (Object1.TietNghiaVuHk02 == null ^ Object2.TietNghiaVuHk02 == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((TietNghiaVuBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static TietNghiaVuComparer GetComparer()
        {
            return new TietNghiaVuComparer();
        }
        */

        // Comparer delegates back to TietNghiaVu
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(TietNghiaVu rhs, TietNghiaVuColumn which)
        {
            switch (which)
            {
            	
            	
            	case TietNghiaVuColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.MaGiangVien:
            		return this.MaGiangVien.Value.CompareTo(rhs.MaGiangVien.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.NamHoc:
            		return this.NamHoc.CompareTo(rhs.NamHoc);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.HocKy:
            		return this.HocKy.CompareTo(rhs.HocKy);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.MaHocHam:
            		return this.MaHocHam.Value.CompareTo(rhs.MaHocHam.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.MaHocVi:
            		return this.MaHocVi.Value.CompareTo(rhs.MaHocVi.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.SoTietNghiaVu:
            		return this.SoTietNghiaVu.Value.CompareTo(rhs.SoTietNghiaVu.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.GhiChu:
            		return this.GhiChu.Value.CompareTo(rhs.GhiChu.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.NgayCapNhat:
            		return this.NgayCapNhat.CompareTo(rhs.NgayCapNhat);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.NguoiCapNhat:
            		return this.NguoiCapNhat.CompareTo(rhs.NguoiCapNhat);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.TietNghiaVuCongTacKhac:
            		return this.TietNghiaVuCongTacKhac.Value.CompareTo(rhs.TietNghiaVuCongTacKhac.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.Chot:
            		return this.Chot.Value.CompareTo(rhs.Chot.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.TietNghiaVuGiangDay:
            		return this.TietNghiaVuGiangDay.Value.CompareTo(rhs.TietNghiaVuGiangDay.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.TietNghiaVuNckh:
            		return this.TietNghiaVuNckh.Value.CompareTo(rhs.TietNghiaVuNckh.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.GioChuanGiangDayChuyenSangNckh:
            		return this.GioChuanGiangDayChuyenSangNckh.Value.CompareTo(rhs.GioChuanGiangDayChuyenSangNckh.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.DinhMucGiangDay:
            		return this.DinhMucGiangDay.Value.CompareTo(rhs.DinhMucGiangDay.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.DinhMucNckh:
            		return this.DinhMucNckh.Value.CompareTo(rhs.DinhMucNckh.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.DinhMucKhac:
            		return this.DinhMucKhac.Value.CompareTo(rhs.DinhMucKhac.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.DinhMucThucTeGiangDay:
            		return this.DinhMucThucTeGiangDay.Value.CompareTo(rhs.DinhMucThucTeGiangDay.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.DinhMucThucTeNckh:
            		return this.DinhMucThucTeNckh.Value.CompareTo(rhs.DinhMucThucTeNckh.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.DinhMucThucTeKhac:
            		return this.DinhMucThucTeKhac.Value.CompareTo(rhs.DinhMucThucTeKhac.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.TietNghiaVuHk01:
            		return this.TietNghiaVuHk01.Value.CompareTo(rhs.TietNghiaVuHk01.Value);
            		
            		                 
            	
            	
            	case TietNghiaVuColumn.TietNghiaVuHk02:
            		return this.TietNghiaVuHk02.Value.CompareTo(rhs.TietNghiaVuHk02.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<TietNghiaVuKey> Members
		
		// member variable for the EntityId property
		private TietNghiaVuKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual TietNghiaVuKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new TietNghiaVuKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("TietNghiaVu")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{24}{23}- Id: {0}{23}- MaGiangVien: {1}{23}- NamHoc: {2}{23}- HocKy: {3}{23}- MaHocHam: {4}{23}- MaHocVi: {5}{23}- SoTietNghiaVu: {6}{23}- GhiChu: {7}{23}- NgayCapNhat: {8}{23}- NguoiCapNhat: {9}{23}- TietNghiaVuCongTacKhac: {10}{23}- Chot: {11}{23}- TietNghiaVuGiangDay: {12}{23}- TietNghiaVuNckh: {13}{23}- GioChuanGiangDayChuyenSangNckh: {14}{23}- DinhMucGiangDay: {15}{23}- DinhMucNckh: {16}{23}- DinhMucKhac: {17}{23}- DinhMucThucTeGiangDay: {18}{23}- DinhMucThucTeNckh: {19}{23}- DinhMucThucTeKhac: {20}{23}- TietNghiaVuHk01: {21}{23}- TietNghiaVuHk02: {22}{23}{25}", 
				this.Id,
				(this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString(),
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
				(this.SoTietNghiaVu == null) ? string.Empty : this.SoTietNghiaVu.ToString(),
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
				(this.TietNghiaVuCongTacKhac == null) ? string.Empty : this.TietNghiaVuCongTacKhac.ToString(),
				(this.Chot == null) ? string.Empty : this.Chot.ToString(),
				(this.TietNghiaVuGiangDay == null) ? string.Empty : this.TietNghiaVuGiangDay.ToString(),
				(this.TietNghiaVuNckh == null) ? string.Empty : this.TietNghiaVuNckh.ToString(),
				(this.GioChuanGiangDayChuyenSangNckh == null) ? string.Empty : this.GioChuanGiangDayChuyenSangNckh.ToString(),
				(this.DinhMucGiangDay == null) ? string.Empty : this.DinhMucGiangDay.ToString(),
				(this.DinhMucNckh == null) ? string.Empty : this.DinhMucNckh.ToString(),
				(this.DinhMucKhac == null) ? string.Empty : this.DinhMucKhac.ToString(),
				(this.DinhMucThucTeGiangDay == null) ? string.Empty : this.DinhMucThucTeGiangDay.ToString(),
				(this.DinhMucThucTeNckh == null) ? string.Empty : this.DinhMucThucTeNckh.ToString(),
				(this.DinhMucThucTeKhac == null) ? string.Empty : this.DinhMucThucTeKhac.ToString(),
				(this.TietNghiaVuHk01 == null) ? string.Empty : this.TietNghiaVuHk01.ToString(),
				(this.TietNghiaVuHk02 == null) ? string.Empty : this.TietNghiaVuHk02.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'TietNghiaVu' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class TietNghiaVuEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "TietNghiaVu"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		public System.Int32? MaGiangVien = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		public System.String NamHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		public System.String HocKy = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		public System.Int32? MaHocHam = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		public System.Int32? MaHocVi = null;
		
		/// <summary>
		/// SoTietNghiaVu : 
		/// </summary>
		public System.Decimal? SoTietNghiaVu = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		public System.Boolean? GhiChu = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		public System.String NgayCapNhat = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		public System.String NguoiCapNhat = null;
		
		/// <summary>
		/// TietNghiaVuCongTacKhac : 
		/// </summary>
		public System.Decimal? TietNghiaVuCongTacKhac = null;
		
		/// <summary>
		/// Chot : 
		/// </summary>
		public System.Boolean? Chot = null;
		
		/// <summary>
		/// TietNghiaVuGiangDay : 
		/// </summary>
		public System.Decimal? TietNghiaVuGiangDay = null;
		
		/// <summary>
		/// TietNghiaVuNckh : 
		/// </summary>
		public System.Decimal? TietNghiaVuNckh = null;
		
		/// <summary>
		/// GioChuanGiangDayChuyenSangNckh : 
		/// </summary>
		public System.Decimal? GioChuanGiangDayChuyenSangNckh = null;
		
		/// <summary>
		/// DinhMucGiangDay : 
		/// </summary>
		public System.Decimal? DinhMucGiangDay = null;
		
		/// <summary>
		/// DinhMucNckh : 
		/// </summary>
		public System.Decimal? DinhMucNckh = null;
		
		/// <summary>
		/// DinhMucKhac : 
		/// </summary>
		public System.Decimal? DinhMucKhac = null;
		
		/// <summary>
		/// DinhMucThucTeGiangDay : 
		/// </summary>
		public System.Decimal? DinhMucThucTeGiangDay = null;
		
		/// <summary>
		/// DinhMucThucTeNckh : 
		/// </summary>
		public System.Decimal? DinhMucThucTeNckh = null;
		
		/// <summary>
		/// DinhMucThucTeKhac : 
		/// </summary>
		public System.Decimal? DinhMucThucTeKhac = null;
		
		/// <summary>
		/// TietNghiaVuHk01 : 
		/// </summary>
		public System.Decimal? TietNghiaVuHk01 = null;
		
		/// <summary>
		/// TietNghiaVuHk02 : 
		/// </summary>
		public System.Decimal? TietNghiaVuHk02 = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private GiangVien _maGiangVienSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GiangVien"/>.
		/// </summary>
		/// <value>The source GiangVien for MaGiangVien.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GiangVien MaGiangVienSource
      	{
            get { return this._maGiangVienSource; }
            set { this._maGiangVienSource = value; }
      	}
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			TietNghiaVuEntityData _tmp = new TietNghiaVuEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.SoTietNghiaVu = this.SoTietNghiaVu;
			_tmp.GhiChu = this.GhiChu;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.TietNghiaVuCongTacKhac = this.TietNghiaVuCongTacKhac;
			_tmp.Chot = this.Chot;
			_tmp.TietNghiaVuGiangDay = this.TietNghiaVuGiangDay;
			_tmp.TietNghiaVuNckh = this.TietNghiaVuNckh;
			_tmp.GioChuanGiangDayChuyenSangNckh = this.GioChuanGiangDayChuyenSangNckh;
			_tmp.DinhMucGiangDay = this.DinhMucGiangDay;
			_tmp.DinhMucNckh = this.DinhMucNckh;
			_tmp.DinhMucKhac = this.DinhMucKhac;
			_tmp.DinhMucThucTeGiangDay = this.DinhMucThucTeGiangDay;
			_tmp.DinhMucThucTeNckh = this.DinhMucThucTeNckh;
			_tmp.DinhMucThucTeKhac = this.DinhMucThucTeKhac;
			_tmp.TietNghiaVuHk01 = this.TietNghiaVuHk01;
			_tmp.TietNghiaVuHk02 = this.TietNghiaVuHk02;
			
			#region Source Parent Composite Entities
			if (this.MaGiangVienSource != null)
				_tmp.MaGiangVienSource = MakeCopyOf(this.MaGiangVienSource) as GiangVien;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			TietNghiaVuEntityData _tmp = new TietNghiaVuEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.SoTietNghiaVu = this.SoTietNghiaVu;
			_tmp.GhiChu = this.GhiChu;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.TietNghiaVuCongTacKhac = this.TietNghiaVuCongTacKhac;
			_tmp.Chot = this.Chot;
			_tmp.TietNghiaVuGiangDay = this.TietNghiaVuGiangDay;
			_tmp.TietNghiaVuNckh = this.TietNghiaVuNckh;
			_tmp.GioChuanGiangDayChuyenSangNckh = this.GioChuanGiangDayChuyenSangNckh;
			_tmp.DinhMucGiangDay = this.DinhMucGiangDay;
			_tmp.DinhMucNckh = this.DinhMucNckh;
			_tmp.DinhMucKhac = this.DinhMucKhac;
			_tmp.DinhMucThucTeGiangDay = this.DinhMucThucTeGiangDay;
			_tmp.DinhMucThucTeNckh = this.DinhMucThucTeNckh;
			_tmp.DinhMucThucTeKhac = this.DinhMucThucTeKhac;
			_tmp.TietNghiaVuHk01 = this.TietNghiaVuHk01;
			_tmp.TietNghiaVuHk02 = this.TietNghiaVuHk02;
			
			#region Source Parent Composite Entities
			if (this.MaGiangVienSource != null && existingCopies.Contains(this.MaGiangVienSource))
				_tmp.MaGiangVienSource = existingCopies[this.MaGiangVienSource] as GiangVien;
			else
				_tmp.MaGiangVienSource = MakeCopyOf(this.MaGiangVienSource, existingCopies) as GiangVien;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="TietNghiaVuColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(TietNghiaVuColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="TietNghiaVuColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(TietNghiaVuColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="TietNghiaVuColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(TietNghiaVuColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				TietNghiaVuEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new TietNghiaVuEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="TietNghiaVuColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(TietNghiaVuColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				TietNghiaVuEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new TietNghiaVuEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region TietNghiaVuEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="TietNghiaVu"/> object.
	/// </remarks>
	public class TietNghiaVuEventArgs : System.EventArgs
	{
		private TietNghiaVuColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the TietNghiaVuEventArgs class.
		///</summary>
		public TietNghiaVuEventArgs(TietNghiaVuColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the TietNghiaVuEventArgs class.
		///</summary>
		public TietNghiaVuEventArgs(TietNghiaVuColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The TietNghiaVuColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="TietNghiaVuColumn" />
		public TietNghiaVuColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all TietNghiaVu related events.
	///</summary>
	public delegate void TietNghiaVuEventHandler(object sender, TietNghiaVuEventArgs e);
	
	#region TietNghiaVuComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class TietNghiaVuComparer : System.Collections.Generic.IComparer<TietNghiaVu>
	{
		TietNghiaVuColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:TietNghiaVuComparer"/> class.
        /// </summary>
		public TietNghiaVuComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:TietNghiaVuComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public TietNghiaVuComparer(TietNghiaVuColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="TietNghiaVu"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="TietNghiaVu"/> to compare.</param>
        /// <param name="b">The second <c>TietNghiaVu</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(TietNghiaVu a, TietNghiaVu b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(TietNghiaVu entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(TietNghiaVu a, TietNghiaVu b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public TietNghiaVuColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region TietNghiaVuKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="TietNghiaVu"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class TietNghiaVuKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the TietNghiaVuKey class.
		/// </summary>
		public TietNghiaVuKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the TietNghiaVuKey class.
		/// </summary>
		public TietNghiaVuKey(TietNghiaVuBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the TietNghiaVuKey class.
		/// </summary>
		public TietNghiaVuKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private TietNghiaVuBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public TietNghiaVuBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region TietNghiaVuColumn Enum
	
	/// <summary>
	/// Enumerate the TietNghiaVu columns.
	/// </summary>
	[Serializable]
	public enum TietNghiaVuColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Giang Vien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaGiangVien = 2,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("Nam Hoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc = 3,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("Hoc Ky")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy = 4,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("Ma Hoc Ham")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam = 5,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("Ma Hoc Vi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi = 6,
		/// <summary>
		/// SoTietNghiaVu : 
		/// </summary>
		[EnumTextValue("So Tiet Nghia Vu")]
		[ColumnEnum("SoTietNghiaVu", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietNghiaVu = 7,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("Ghi Chu")]
		[ColumnEnum("GhiChu", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		GhiChu = 8,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("Ngay Cap Nhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		NgayCapNhat = 9,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("Nguoi Cap Nhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NguoiCapNhat = 10,
		/// <summary>
		/// TietNghiaVuCongTacKhac : 
		/// </summary>
		[EnumTextValue("Tiet Nghia Vu Cong Tac Khac")]
		[ColumnEnum("TietNghiaVuCongTacKhac", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVuCongTacKhac = 11,
		/// <summary>
		/// Chot : 
		/// </summary>
		[EnumTextValue("Chot")]
		[ColumnEnum("Chot", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		Chot = 12,
		/// <summary>
		/// TietNghiaVuGiangDay : 
		/// </summary>
		[EnumTextValue("Tiet Nghia Vu Giang Day")]
		[ColumnEnum("TietNghiaVuGiangDay", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVuGiangDay = 13,
		/// <summary>
		/// TietNghiaVuNckh : 
		/// </summary>
		[EnumTextValue("Tiet Nghia Vu Nckh")]
		[ColumnEnum("TietNghiaVuNckh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVuNckh = 14,
		/// <summary>
		/// GioChuanGiangDayChuyenSangNckh : 
		/// </summary>
		[EnumTextValue("Gio Chuan Giang Day Chuyen Sang Nckh")]
		[ColumnEnum("GioChuanGiangDayChuyenSangNckh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GioChuanGiangDayChuyenSangNckh = 15,
		/// <summary>
		/// DinhMucGiangDay : 
		/// </summary>
		[EnumTextValue("Dinh Muc Giang Day")]
		[ColumnEnum("DinhMucGiangDay", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DinhMucGiangDay = 16,
		/// <summary>
		/// DinhMucNckh : 
		/// </summary>
		[EnumTextValue("Dinh Muc Nckh")]
		[ColumnEnum("DinhMucNckh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DinhMucNckh = 17,
		/// <summary>
		/// DinhMucKhac : 
		/// </summary>
		[EnumTextValue("Dinh Muc Khac")]
		[ColumnEnum("DinhMucKhac", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DinhMucKhac = 18,
		/// <summary>
		/// DinhMucThucTeGiangDay : 
		/// </summary>
		[EnumTextValue("Dinh Muc Thuc Te Giang Day")]
		[ColumnEnum("DinhMucThucTeGiangDay", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DinhMucThucTeGiangDay = 19,
		/// <summary>
		/// DinhMucThucTeNckh : 
		/// </summary>
		[EnumTextValue("Dinh Muc Thuc Te Nckh")]
		[ColumnEnum("DinhMucThucTeNckh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DinhMucThucTeNckh = 20,
		/// <summary>
		/// DinhMucThucTeKhac : 
		/// </summary>
		[EnumTextValue("Dinh Muc Thuc Te Khac")]
		[ColumnEnum("DinhMucThucTeKhac", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DinhMucThucTeKhac = 21,
		/// <summary>
		/// TietNghiaVuHk01 : 
		/// </summary>
		[EnumTextValue("Tiet Nghia Vu Hk01")]
		[ColumnEnum("TietNghiaVuHk01", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVuHk01 = 22,
		/// <summary>
		/// TietNghiaVuHk02 : 
		/// </summary>
		[EnumTextValue("Tiet Nghia Vu Hk02")]
		[ColumnEnum("TietNghiaVuHk02", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVuHk02 = 23
	}//End enum

	#endregion TietNghiaVuColumn Enum

} // end namespace
