using DevExpress.Common.Grid;
using DevExpress.XtraEditors;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraGrid.Views.Grid;
using PMS.BLL;
using PMS.Comon;
using PMS.Entities;
using PMS.Services;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace PMS.UI.Forms.NghiepVu
{
    public partial class frmChamTay2 : Form
    {
        TList<CauHinhChung> _cauHinhChung = DataServices.CauHinhChung.GetAll();
        VList<ViewKhoa> _listKhoaDonVi;
        string _groupName = UserInfo.GroupName;
        bool _status;
        int iMaHoatDong = UserInfo.MaHoatDong;//phân quyền cho hoạt động 
        bool bUserHoatDong = false;
        TList<HoatDongNgoaiGiangDay> LstHDNGD;
        VList<ViewGiangVien> _ViewGiangVien = new VList<ViewGiangVien>();
        string strMaHoatDong = string.Empty;
        public frmChamTay2()
        {
            InitializeComponent();
        }

        private void frmChamTay2_Load(object sender, EventArgs e)
        {
            LoadTitle();
            InitData();
            LoaiHoatDong(2);
            LoadDataGiangVienByKhoa(cbo_Khoa.EditValue.ToString(), cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString());
            LoadTenLophocPhan(cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString(), cbo_LoaiHoatDong.EditValue.ToString(), cbo_Khoa.EditValue.ToString());
            LoadDataBy(cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString(), cbo_Khoa.EditValue.ToString(), cbo_LoaiHoatDong.EditValue.ToString());
        }

        private void LoadTitle()
        {
            string[] LstColumns = new string[] { "TenLopHocPhan", "TenMonHoc", "SoTinChi", "NgayThi", "CaThi", "PhongThi", "LanThi", "SiSo", "HeSoQuyDoi", "GiangVienCham1", "DonVi1", "GiangVienCham2", "DonVi2", "Khoa", "GhiChu", "MaHoatDong" };
            string[] LstColumnsTitle = new string[] { "Lớp học phần", "Tên môn học", "Tín chỉ", "Ngày thi", "Ca thi", "Phòng thi", "Lần thi", "Sĩ số", "Hệ số quy đổi", "Giảng viên chấm 1", "Đơn vị", "Giảng viên chấm 2", "Đơn vị", "Khóa", "Ghi chú", "Hoạt động" };
            int[] LstIndex = new int[] { 160, 120, 70, 90, 80, 80, 60, 70, 70, 120, 150, 120, 150, 60, 200, 10 };
            #region Init GridView
            AppGridView.InitGridView(gdv_ChamTay2, true, true, DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode.RowSelect, false, false, "Nhấn vào đây để thêm dòng mới");
            AppGridView.ShowEditor(gdv_ChamTay2, DevExpress.XtraGrid.Views.Grid.NewItemRowPosition.Top);
            AppGridView.ShowField(gdv_ChamTay2, LstColumns, LstColumnsTitle, LstIndex);
            AppGridView.AlignHeader(gdv_ChamTay2, LstColumns, DevExpress.Utils.HorzAlignment.Center);
            AppGridView.ReadOnlyColumn(gdv_ChamTay2);
            AppGridView.AllowEditColumn(gdv_ChamTay2, new string[] { "SiSo", "TenLopHocPhan", "GiangVienCham2", "Khoa" ,"GhiChu"});
            AppGridView.RegisterControlField(gdv_ChamTay2, "GiangVienCham2", repositoryItem_G_GiangVien);
            AppGridView.RegisterControlField(gdv_ChamTay2, "GiangVienCham1", repositoryItem_G_GiangVienCham1);
            AppGridView.RegisterControlField(gdv_ChamTay2, "TenLopHocPhan", repositoryItem_gLopHocPhan);
            AppGridView.FormatDataField(gdv_ChamTay2, "HeSoQuyDoi", DevExpress.Utils.FormatType.Custom, "n2");
            AppGridView.HideField(gdv_ChamTay2, new string[] { "MaHoatDong" });
            //AppGridView.FormatDataField(gdv_ChamTay2, "SiSo", DevExpress.Utils.FormatType.Custom, "n0");
            //AppGridView.FormatDataField(gdv_ChamTay2, "SoTiet", DevExpress.Utils.FormatType.Custom, "n0");
            //AppGridView.SummaryField(gdv_ChamTay2, "MaGiangVien", "Tổng: {0}", DevExpress.Data.SummaryItemType.Count);
            #endregion

            #region HoatDongNgoaiGiangDay
            AppRepositoryItemGridLookUpEdit.InitRepositoryItemGridLookUp(repositoryItem_gLopHocPhan, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppRepositoryItemGridLookUpEdit.ShowField(repositoryItem_gLopHocPhan, new string[] { "TenLopHocPhan", "TenMonHoc", "SiSo" }, new string[] { "Tên lớp học phần", "Tên môn học", "Sỉ số" }, new int[] { 300, 100, 80 });
            AppRepositoryItemGridLookUpEdit.InitPopupFormSize(repositoryItem_gLopHocPhan, 500, 450);
            repositoryItem_gLopHocPhan.DisplayMember = "TenLopHocPhan";
            repositoryItem_gLopHocPhan.ValueMember = "TenLopHocPhan";
            repositoryItem_gLopHocPhan.NullText = string.Empty;
            #endregion

            #region GiangVien
            AppRepositoryItemGridLookUpEdit.InitRepositoryItemGridLookUp(repositoryItem_G_GiangVien, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppRepositoryItemGridLookUpEdit.ShowField(repositoryItem_G_GiangVien, new string[] { "MaQuanLy", "HoTen", "TenDonVi" }, new string[] { "Mã giảng viên", "Họ tên", "Khoa - Đơn vị" }
                        , new int[] { 100, 180, 120 });
            AppRepositoryItemGridLookUpEdit.InitPopupFormSize(repositoryItem_G_GiangVien, 400, 500);
            repositoryItem_G_GiangVien.DisplayMember = "HoTen";
            repositoryItem_G_GiangVien.ValueMember = "MaGiangVien";
            repositoryItem_G_GiangVien.NullText = string.Empty;
            #endregion

            #region Giảng viên chấm 1
            AppRepositoryItemGridLookUpEdit.InitRepositoryItemGridLookUp(repositoryItem_G_GiangVienCham1, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppRepositoryItemGridLookUpEdit.ShowField(repositoryItem_G_GiangVienCham1, new string[] { "MaQuanLy", "HoTen", "TenDonVi" }, new string[] { "Mã giảng viên", "Họ tên", "Khoa - Đơn vị" }
                        , new int[] { 100, 180, 120 });
            AppRepositoryItemGridLookUpEdit.InitPopupFormSize(repositoryItem_G_GiangVienCham1, 400, 500);
            repositoryItem_G_GiangVienCham1.DisplayMember = "HoTen";
            repositoryItem_G_GiangVienCham1.ValueMember = "MaGiangVien";
            repositoryItem_G_GiangVienCham1.NullText = string.Empty;
            #endregion

            #region _namHoc
            AppGridLookupEdit.InitGridLookUp(cbo_NamHoc, true, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppGridLookupEdit.ShowField(cbo_NamHoc, new string[] { "NamHoc" }, new string[] { "Năm học" });
            cbo_NamHoc.Properties.DisplayMember = "NamHoc";
            cbo_NamHoc.Properties.ValueMember = "NamHoc";
            cbo_NamHoc.Properties.NullText = string.Empty;
            cbo_NamHoc.EditValue = _cauHinhChung.Find(p => p.TenCauHinh == "Năm học hiện tại").GiaTri;
            #endregion

            #region _namHoc
            AppGridLookupEdit.InitGridLookUp(cbo_NamHoc, true, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppGridLookupEdit.ShowField(cbo_NamHoc, new string[] { "NamHoc" }, new string[] { "Năm học" });
            cbo_NamHoc.Properties.DisplayMember = "NamHoc";
            cbo_NamHoc.Properties.ValueMember = "NamHoc";
            cbo_NamHoc.Properties.NullText = string.Empty;
            cbo_NamHoc.EditValue = _cauHinhChung.Find(p => p.TenCauHinh == "Năm học hiện tại").GiaTri;
            #endregion

            #region _hocKy
            AppGridLookupEdit.InitGridLookUp(cbo_HocKy, true, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppGridLookupEdit.ShowField(cbo_HocKy, new string[] { "TenHocKy" }, new string[] { "Học kỳ" });
            cbo_HocKy.Properties.DisplayMember = "TenHocKy";
            cbo_HocKy.Properties.ValueMember = "MaHocKy";
            cbo_HocKy.Properties.NullText = string.Empty;
            cbo_HocKy.EditValue = _cauHinhChung.Find(p => p.TenCauHinh == "Học kỳ hiện tại").GiaTri;
            #endregion

            #region Khoa bộ môn
            AppGridLookupEdit.InitGridLookUp(cbo_Khoa, true, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppGridLookupEdit.ShowField(cbo_Khoa, new string[] { "MaBoMon", "TenBoMon" }, new string[] { "Mã bộ môn", "Tên bộ môn" });
            cbo_Khoa.Properties.DisplayMember = "TenBoMon";
            cbo_Khoa.Properties.ValueMember = "MaBoMon";
            cbo_Khoa.Properties.NullText = string.Empty;
            #endregion

            #region _LoaiHoatDongNgoaiGiangDay
            AppGridLookupEdit.InitGridLookUp(cbo_LoaiHoatDong, true, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppGridLookupEdit.ShowField(cbo_LoaiHoatDong, new string[] { "TenHoatDong" }, new string[] { "Tên hoạt động" });
            cbo_LoaiHoatDong.Properties.DisplayMember = "TenHoatDong";
            cbo_LoaiHoatDong.Properties.ValueMember = "MaHoatDong";
            #endregion
        }

        private void InitData()
        {
            bds_NamHoc.DataSource = DataServices.ViewNamHoc.GetAll();
            if (cbo_NamHoc.EditValue != null)
            {
                bds_HocKy.DataSource = DataServices.ViewHocKy.GetByNamHoc(cbo_NamHoc.EditValue.ToString());
            }


            #region _khoaDonVi
            AppGridLookupEdit.InitGridLookUp(cbo_Khoa, true, DevExpress.XtraEditors.Controls.TextEditStyles.Standard);
            AppGridLookupEdit.ShowField(cbo_Khoa, new string[] { "MaKhoa", "TenKhoa" }, new string[] { "Mã khoa", "Tên khoa" }, new int[] { 60, 200 });
            cbo_Khoa.Properties.ValueMember = "MaKhoa";
            cbo_Khoa.Properties.DisplayMember = "TenKhoa";
            cbo_Khoa.Properties.NullText = string.Empty;
            _listKhoaDonVi = DataServices.ViewKhoa.GetAll();
            cbo_Khoa.DataBindings.Clear();
            foreach (ViewKhoa v in _listKhoaDonVi)
            {
                if (v.MaKhoa == _groupName)
                {
                    _status = true;
                    break;
                }
            }
            if (_status)
                _listKhoaDonVi = _listKhoaDonVi.FindAll(p => p.MaKhoa == _groupName) as VList<ViewKhoa>;
            else
                _listKhoaDonVi.Insert(0, new ViewKhoa() { ThuTu = -1, MaKhoa = "-1", TenKhoa = "[Tất cả]" });
            bds_Khoa.DataSource = _listKhoaDonVi;
            cbo_Khoa.DataBindings.Add("EditValue", bds_Khoa, "MaKhoa", true, DataSourceUpdateMode.Never);
            #endregion

            LstHDNGD = DataServices.HoatDongNgoaiGiangDay.GetAll();

        }

        private void LoadDataGiangVienByKhoa(string strKhoa, string strNamHoc, string strHocKy)
        {
            bds_GiangVien.Clear();
            bds_GiangVienC1.Clear();
            _ViewGiangVien = DataServices.ViewGiangVien.GetByMaDonViTrucThuoc(strKhoa, strNamHoc, strHocKy);
            bds_GiangVien.DataSource = _ViewGiangVien;
            bds_GiangVienC1.DataSource = _ViewGiangVien;
        }

        private void LoadTenLophocPhan(string strNamhoc, string strHocKy, string strMaHoatDong, string strKhoa)
        {
            DataTable tbl = new DataTable();
            tbl.Load(DataServices.ChamTayHai.GetAllChamTay2(strNamhoc, strHocKy, strMaHoatDong, strKhoa));
            bds_LopHocPhan.DataSource = tbl;
        }

        private void btn_Excel_XuatFile_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            DataTable dbTable = new DataTable();
            dbTable.Load(DataServices.GiangVienHoatDongNgoaiGiangDay.GetByNamHocHocKyKhoaExportExcel(cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString(), cbo_Khoa.EditValue.ToString()));
            ExcelImport.exportDataToExcel(2, dbTable);
        }

        private void btn_Excel_Nhapfile_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int iOutput = -1;
            using (FrmIm_Ex_port_GiangVienHoatDongNgoaiGiangDay frmImExport = new NghiepVu.FrmIm_Ex_port_GiangVienHoatDongNgoaiGiangDay(cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString(), 0))
            {
                frmImExport.MaHoatDong = cbo_LoaiHoatDong.EditValue.ToString();
                iOutput = frmImExport.OutPut;
                frmImExport.ShowDialog();
            }
            if (iOutput == 0)
            {
                LoadDataBy(cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString(), cbo_LoaiHoatDong.EditValue.ToString(), cbo_Khoa.EditValue.ToString());
            }
        }

        private void LoadDataBy(string v1, string v2, string v3, string v4)
        {
            try
            {
                DataTable dbTable = new DataTable();
                dbTable.Load(DataServices.ChamTayHai.GetBangChamTay2ByNamHocHocKyKhoaLoaiHoatDong(v1, v2, v3, v4));
                dbTable.Columns["Khoa"].ReadOnly = false;
                dbTable.Columns["HeSoQuyDoi"].ReadOnly = false;
                dbTable.Columns["SiSo"].ReadOnly = false;
                dbTable.Columns["GhiChu"].ReadOnly = false;
                bds_ChamTay2.DataSource = dbTable;
            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }

        }

        private void chk_Clc_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                LoaiHoatDong(chk_Clc.Checked == true ? 0 : 1);
            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
        }

        private void LoaiHoatDong(int b)
        {
            #region Loại hoạt động
            cbo_LoaiHoatDong.DataBindings.Clear();
            VList<ViewGiangVienHoatDongNgoaiGiangDay> _VListHoatDongNgoaiGiangDay = new VList<ViewGiangVienHoatDongNgoaiGiangDay>();
            string strChuoi = string.Empty;
            foreach (HoatDongNgoaiGiangDay item in LstHDNGD)
            {
                if (item.ThanhToanBinhThuong != null)
                {
                    if ((bool)item.ThanhToanBinhThuong == true)
                    {
                        ViewGiangVienHoatDongNgoaiGiangDay itemsview = new ViewGiangVienHoatDongNgoaiGiangDay();
                        itemsview.MaHoatDong = item.MaQuanLy;
                        strMaHoatDong = item.MaQuanLy.ToString();
                        itemsview.TenHoatDong = item.TenHoatDong;
                        itemsview.MucQuyDoi = item.MucQuyDoi;
                        itemsview.GhiChu = item.GhiChu;
                        strChuoi = item.TenHoatDong.Substring(item.TenHoatDong.Length - 3, 3);
                        if (b == 0)
                        {
                            if (strChuoi.ToUpper() == "CLC")
                            {
                                _VListHoatDongNgoaiGiangDay.Add(itemsview);
                            }
                        }
                        else if (b == 1)
                        {
                            if (strChuoi != "CLC")
                            {
                                _VListHoatDongNgoaiGiangDay.Add(itemsview);
                            }
                        }
                        else
                            _VListHoatDongNgoaiGiangDay.Add(itemsview);
                    }

                }
            }
            foreach (ViewGiangVienHoatDongNgoaiGiangDay item in _VListHoatDongNgoaiGiangDay)
            {
                if (item.MaHoatDong == iMaHoatDong)
                {
                    bUserHoatDong = true;
                    break;
                }
            }
            if (bUserHoatDong)
                _VListHoatDongNgoaiGiangDay = DataServices.ViewGiangVienHoatDongNgoaiGiangDay.GetByMaHoatDong(iMaHoatDong.ToString());
            else
                _VListHoatDongNgoaiGiangDay.Add(new ViewGiangVienHoatDongNgoaiGiangDay() { MaHoatDong = -1, TenHoatDong = "[Tất cả]" });
            bds_LoaiHoatDong.DataSource = _VListHoatDongNgoaiGiangDay;
            bds_LoaiHoatDong.Sort = "MaHoatDong";
            cbo_LoaiHoatDong.DataBindings.Add("EditValue", bds_LoaiHoatDong, "MaHoatDong", true, DataSourceUpdateMode.Never);
            cbo_LoaiHoatDong.Properties.DataSource = bds_LoaiHoatDong;
            #endregion
        }

        private void btn_LamTuoi_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            InitData();
            LoaiHoatDong(2);
        }

        private void btn_Xoa_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            string[] LstColumn = { "TenLopHocPhan", "GiangVienCham2", "MaHoatDong" };
            int output = -1;
            if (XtraMessageBox.Show(String.Format("Bạn có muốn xóa {0} dòng đã chọn không ?", gdv_ChamTay2.GetSelectedRows().Length), "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                string strXML = PMS.Common.Globals.XoaXMLFromGridView(gdv_ChamTay2, LstColumn, cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString());
                DataServices.ChamTayHai.LuuXoa(strXML, ref output);
                if (output == 0)
                    PMS.Common.XuLyGiaoDien.ThongBao(PMS.Common.ThongBao.Str_ThongBao, PMS.Common.ThongBao.Str_Luuxoathanhcong, MessageBoxIcon.None, true);
                else
                    PMS.Common.XuLyGiaoDien.ThongBao(PMS.Common.ThongBao.Str_ThongBao, PMS.Common.ThongBao.Str_Luuxoathatbai, MessageBoxIcon.Warning, true);

            }
            btn_Loc_Click(sender, e);
        }

        private DataTable LoadAllData(DataTable tbl)
        {
            DataTable dbTbl = new DataTable();
            dbTbl = PMS.Common.XuLyGiaoDien.AddRowFromTable(tbl);
            return dbTbl;
        }

        private void btn_Loc_Click(object sender, EventArgs e)
        {
            LoadDataBy(cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString(), cbo_LoaiHoatDong.EditValue.ToString(), cbo_Khoa.EditValue.ToString());

        }

        private void gdv_ChamTay2_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            GridColumn gdv = e.Column;
            DataTable tbl;
            if (gdv.FieldName == "TenLopHocPhan")
            {
                tbl = bds_LopHocPhan.DataSource as DataTable;
                string strLopHocPhan = gdv_ChamTay2.GetRowCellValue(e.RowHandle, "TenLopHocPhan").ToString();
                DataRow[] dr = tbl.Select("TenLopHocPhan='" + strLopHocPhan + "'");
                string strNgayThi = string.Empty, strHeSoQuyDoi = string.Empty;
                foreach (DataRow item in dr)
                {
                    strNgayThi = item["NgayThi"].ToString();
                    strHeSoQuyDoi = item["HeSoQuyDoi"].ToString();
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "TenMonHoc", item["TenMonHoc"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "SoTinChi", item["SoTinChi"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "NgayThi", strNgayThi);
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "CaThi", item["CaThi"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "PhongThi", item["PhongThi"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "LanThi", item["LanThi"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "SiSo", item["SiSo"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "HeSoQuyDoi", strHeSoQuyDoi);
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "GiangVienCham1", item["GiangVienCham1"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "DonVi1", item["DonVi1"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "GiangVienCham2", item["GiangVienCham2"].ToString());
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "Khoa", item["Khoa"].ToString());
                }
            }
            else if (gdv.FieldName == "GiangVienCham2")
            {
                string strGiangVien = gdv_ChamTay2.GetRowCellValue(e.RowHandle, "GiangVienCham2").ToString();
                if (strGiangVien.Length > 0 || strGiangVien != string.Empty)
                {
                    VList<ViewGiangVien> LstGiangvien = bds_GiangVien.DataSource as VList<ViewGiangVien>;
                    ViewGiangVien itemGiangVien = LstGiangvien.Find(p => p.MaGiangVien == int.Parse(strGiangVien));
                    gdv_ChamTay2.SetRowCellValue(e.RowHandle, "DonVi2", itemGiangVien.TenDonVi.ToString());
                }
            }
            else if (gdv.FieldName == "SiSo")
            {
                string strSoLuong = "1", strMucQuyDoi = "1";
                string strSiSo = gdv_ChamTay2.GetRowCellValue(e.RowHandle, "SiSo").ToString();
                tbl = bds_LopHocPhan.DataSource as DataTable;
                string strLopHocPhan = gdv_ChamTay2.GetRowCellValue(e.RowHandle, "TenLopHocPhan").ToString();
                DataRow[] dr = tbl.Select("TenLopHocPhan='" + strLopHocPhan + "'");
                foreach (DataRow item in dr)
                {
                    strSoLuong = item["SoLuong"].ToString();
                    strMucQuyDoi = item["MucQuyDoi"].ToString();
                }
                decimal dKetQua = decimal.Parse(strSiSo) / decimal.Parse(strSoLuong) * decimal.Parse(strMucQuyDoi);
                gdv_ChamTay2.SetRowCellValue(e.RowHandle, "HeSoQuyDoi", dKetQua);
            }
        }

        private void btn_Luu_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                if (cbo_LoaiHoatDong.EditValue.ToString() == "-1")
                {
                    PMS.Common.XuLyGiaoDien.ThongBao(PMS.Common.ThongBao.Str_ThongBao, PMS.Common.ThongBao.Str_ChonLoaiHoatDong, MessageBoxIcon.Warning, true);
                    return;
                }
                else
                {
                    string[] LstColumn = { "GiangVienCham2", "TenLopHocPhan", "SiSo", "Khoa", "HeSoQuyDoi", "GhiChu" };
                    int output = -1;
                    Cursor.Current = Cursors.WaitCursor;
                    DataTable dbChamTay2 = bds_ChamTay2.DataSource as DataTable;
                    string strXML = "<Root></Root>";
                    strXML = PMS.Common.Globals.GetXMLFromLISTMaHoatDong(LstColumn, dbChamTay2, cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString(), DateTime.Now.ToString("yyyy-MM-dd"), UserInfo.UserName, cbo_LoaiHoatDong.EditValue.ToString());
                    if (strXML == "<Root></Root>")
                    {
                        PMS.Common.XuLyGiaoDien.ThongBao(PMS.Common.ThongBao.Str_ThongBao, PMS.Common.ThongBao.Str_KiemTraFileExcel, MessageBoxIcon.Warning, true);
                        return;
                    }
                    else
                    {
                        DataServices.ChamTayHai.Luu(strXML, ref output);
                        if (output == 0)
                            PMS.Common.XuLyGiaoDien.ThongBao(PMS.Common.ThongBao.Str_ThongBao, PMS.Common.ThongBao.Str_LuuImportThanhCong, MessageBoxIcon.None, true);
                        else
                            PMS.Common.XuLyGiaoDien.ThongBao(PMS.Common.ThongBao.Str_ThongBao, PMS.Common.ThongBao.Str_LuuImportThatBai, MessageBoxIcon.Warning, true);

                    }
                    Cursor.Current = Cursors.Default;
                }
                btn_Loc_Click(sender, e);
            }
            catch
            {
                PMS.Common.XuLyGiaoDien.ThongBao(PMS.Common.ThongBao.Str_ThongBao, PMS.Common.ThongBao.Str_LuuImportThatBai + ".......!", MessageBoxIcon.Error, true);
            }
        }

        private void cbo_Khoa_EditValueChanged(object sender, EventArgs e)
        {
            if (cbo_NamHoc.EditValue != null && cbo_HocKy.EditValue != null && cbo_Khoa.EditValue != null)
                LoadDataGiangVienByKhoa(cbo_Khoa.EditValue.ToString(), cbo_NamHoc.EditValue.ToString(), cbo_HocKy.EditValue.ToString());
        }
    }
}
